# Módulo 4: Catálogo de Itens Disponíveis

class CatalogoItem:
    def __init__(self, codigo, nome, valor_creditos):
        self.codigo = codigo
        self.nome = nome
        self.valor_creditos = valor_creditos


class CatalogoItens:
    def __init__(self, sistema_cadastro):
        self.itens_disponiveis = []
        self.sistema_cadastro = sistema_cadastro

    def adicionar_item_disponivel(self, item):
        self.itens_disponiveis.append(item)

    def mostrar_catalogo(self):
        print("Catálogo de Itens Disponíveis:")
        for item in self.itens_disponiveis:
            print(f"Código: {item.codigo} - Nome: {item.nome} - Valor em Créditos: {item.valor_creditos}")

    def atualizar_catalogo(self):
        # Atualizar o catálogo com os itens cadastrados no sistema
        itens_cadastrados = self.sistema_cadastro.clientes_itens
        for cliente in itens_cadastrados:
            # Verificar se o item já está no catálogo
            if not any(item.codigo == cliente.codigo for item in self.itens_disponiveis):
                # Se não estiver no catálogo, adiciona
                novo_item = CatalogoItem(cliente.codigo, cliente.nome, cliente.valor_creditos)
                self.adicionar_item_disponivel(novo_item)


# Criar instâncias necessárias
sistema_cadastro = SistemaCadastro()
sistema_avaliacao = SistemaAvaliacao(sistema_cadastro)
catalogo_itens = CatalogoItens(sistema_cadastro)

# Simulação de cadastramento de itens
cliente1 = Cliente("Camiseta", "Camiseta branca, tamanho M", "Usado", "foto_camiseta.jpg")
sistema_cadastro.cadastrar_item(cliente1)

# Simulação de avaliação de itens
item_avaliacao = ItemParaAvaliacao(cliente1.codigo, cliente1.nome, cliente1.descricao, cliente1.condicao, cliente1.foto)
sistema_avaliacao.adicionar_item_avaliacao(item_avaliacao)
sistema_avaliacao.avaliar_itens()

# Atualizar o catálogo com os itens cadastrados
catalogo_itens.atualizar_catalogo()

# Mostrar o catálogo de itens disponíveis
catalogo_itens.mostrar_catalogo()
